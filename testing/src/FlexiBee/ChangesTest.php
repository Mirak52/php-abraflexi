<?php

namespace Test\FlexiBee;

use FlexiBee\Changes;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-05-24 at 14:37:24.
 */
class ChangesTest extends FlexiBeeROTest
{
    /**
     * @var Changes
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new Changes();
    }

    /**
     * @covers FlexiBee\Changes::enable
     */
    public function testEnable()
    {
        $this->object->enable();
    }

    /**
     * @covers FlexiBee\Changes::performRequest
     * @depends testEnable
     */
    public function testPerformRequest()
    {
        parent::testPerformRequest();
    }

    /**
     * @covers FlexiBee\Changes::idExists
     * @depends testEnable
     */
    public function testIdExists()
    {
        $this->object->idExists();
    }

    /**
     * @covers FlexiBee\Changes::getFlexiData
     * @depends testEnable
     */
    public function testGetFlexiData()
    {
        /**
         * Make Some Changes First ...
         */
        $address = new \FlexiBee\Adresar();
        $address->setDataValue('nazev', \Ease\Functions::randomString());
        $address->setDataValue('poznam', 'Unit Test Random Record');
        $address->insertToFlexiBee();

        $flexidata = $this->object->getFlexiData();

        if (isset($flexidata['message']) && ($flexidata['message'] == 'Changelog is not enabled')) {
            $this->markTestSkipped('Changelog is not enabled');
        } else {
            if (count($flexidata)) {
                $this->assertArrayHasKey(0, $flexidata);
            } else {
                $this->markTestSkipped('Changelog is empty ?');
            }
        }

        $address->deleteFromFlexiBee();
    }

    /**
     * @covers FlexiBee\Changes::recordExists
     */
    public function testRecordExists()
    {
        $this->assertNull($this->object->recordExists());
    }

    /**
     * @covers FlexiBee\Changes::disable
     */
    public function testDisable()
    {
        $this->object->disable();
        $this->assertFalse($this->object->getStatus());
    }

    /**
     * @covers FlexiBee\Changes::getStatus
     */
    public function testGetStatus()
    {
        $status = $this->object->getStatus();
        $this->assertInternalType('boolean', $status);
    }

    
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
        
    }
}
