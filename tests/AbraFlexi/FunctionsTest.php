<?php

namespace Test\AbraFlexi;

use AbraFlexi\Functions;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2024-10-02 at 10:07:30.
 */
class FunctionsTest extends \PHPUnit\Framework\TestCase {

    /**
     * @var Functions
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new Functions();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    /**
     * @covers AbraFlexi\Functions::urlEncode
     * @todo   Implement testurlEncode().
     */
    public function testurlEncode() {
        $this->assertEquals('', $this->object->urlEncode());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::evidenceToClassName
     * @todo   Implement testevidenceToClassName().
     */
    public function testevidenceToClassName() {
        $this->assertEquals('', $this->object->evidenceToClassName());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::code
     * @todo   Implement testcode().
     */
    public function testcode() {
        $this->assertEquals('', $this->object->code());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::companyUrlToOptions
     * @todo   Implement testcompanyUrlToOptions().
     */
    public function testcompanyUrlToOptions() {
        $this->assertEquals('', $this->object->companyUrlToOptions());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::uncode
     * @todo   Implement testuncode().
     */
    public function testuncode() {
        $this->assertEquals('', $this->object->uncode());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::flexiIN
     * @todo   Implement testflexiIN().
     */
    public function testflexiIN() {
        $this->assertEquals('', $this->object->flexiIN());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::flexiUrl
     * @todo   Implement testflexiUrl().
     */
    public function testflexiUrl() {
        $this->assertEquals('', $this->object->flexiUrl());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::dateToFlexiDate
     * @todo   Implement testdateToFlexiDate().
     */
    public function testdateToFlexiDate() {
        $this->assertEquals('', $this->object->dateToFlexiDate());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::dateToFlexiDateTime
     * @todo   Implement testdateToFlexiDateTime().
     */
    public function testdateToFlexiDateTime() {
        $this->assertEquals('', $this->object->dateToFlexiDateTime());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::flexiDateToDateTime
     * @todo   Implement testflexiDateToDateTime().
     */
    public function testflexiDateToDateTime() {
        $this->assertEquals('', $this->object->flexiDateToDateTime());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::flexiDateTimeToDateTime
     * @todo   Implement testflexiDateTimeToDateTime().
     */
    public function testflexiDateTimeToDateTime() {
        $this->assertEquals('', $this->object->flexiDateTimeToDateTime());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::object2array
     * @todo   Implement testobject2array().
     */
    public function testobject2array() {
        $this->assertEquals('', $this->object->object2array());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::objectToID
     * @todo   Implement testobjectToID().
     */
    public function testobjectToID() {
        $this->assertEquals('', $this->object->objectToID());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::urlizeId
     * @todo   Implement testurlizeId().
     */
    public function testurlizeId() {
        $this->assertEquals('', $this->object->urlizeId());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers AbraFlexi\Functions::xml2array
     * @todo   Implement testxml2array().
     */
    public function testxml2array() {
        $this->assertEquals('', $this->object->xml2array());
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }
}
