<?php

declare(strict_types=1);

/**
 * This file is part of the EaseCore package.
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\AbraFlexi;

use AbraFlexi\Date;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2021-10-17 at 16:07:28.
 */
class DateTest extends \PHPUnit\Framework\TestCase
{
    protected Date $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new Date();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * Test Constructor.
     *
     * @covers \AbraFlexi\Date::__construct
     */
    public function testConstructor(): void
    {
        $classname = \get_class($this->object);

        // Get mock, without the constructor being called
        $mock = $this->getMockBuilder($classname)
            ->disableOriginalConstructor()
            ->getMockForAbstractClass();

        $mock->__construct('');
        $this->assertTrue($mock->isNull);

        $mock->__construct('NOW');
        $this->assertFalse($mock->isNull);

        $mock->__construct('2021-10-16');

        $mock->__construct('2021-10-16+02:00');

        $mock->__construct('2021-10-18-02:00');

        $mock->__construct('2021-10-16Z');
    }

    /**
     * @covers \AbraFlexi\Date::__toString
     */
    public function testToString(): void
    {
        $this->assertEquals(date('Y-m-d'), $this->object->__toString());
    }
}
